# Telegraf Agent Configuration
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  omit_hostname = false

# InfluxDB output configuration for IDRAC data
[[outputs.influxdb_v2]]
  urls = ["http://192.168.29.203:8086"]
  token = "Jz2HZ6JSX0LV5fBFkraRdpUUb0wuJExoAh9uWK1kpQjO9prk49KgAxGNuSTh5WT1dM66sHBvy3jamYOWpj5UYA=="
  organization = "infoblox"
  bucket = "idrac_bucket"
  insecure_skip_verify = true
  
  [[outputs.influxdb_v2.tagpass]]
    source = ["idrac"]

# InfluxDB output configuration for VMware data
[[outputs.influxdb_v2]]
  urls = ["http://192.168.29.203:8086"]
  token = "Jz2HZ6JSX0LV5fBFkraRdpUUb0wuJExoAh9uWK1kpQjO9prk49KgAxGNuSTh5WT1dM66sHBvy3jamYOWpj5UYA=="
  organization = "infoblox"
  bucket = "vmware_bucket"
  insecure_skip_verify = true
  
  [[outputs.influxdb_v2.tagpass]]
    source = ["vmware"]


# VSphere Input Plugin
[[inputs.vsphere]]
  vcenters = [ "https://10.192.33.15/sdk" ]
  username = "administrator@supportlab.infoblox.com"
  password = "Infoblox@2024"
  insecure_skip_verify = true

  [inputs.vsphere.tags]
    source = "vmware"

  vm_include = [ "/*/vm/**" ]
  vm_metric_include = [
    "cpu.demand.average", "cpu.idle.summation", "cpu.latency.average",
    "cpu.readiness.average", "cpu.ready.summation", "cpu.run.summation",
    "cpu.usagemhz.average", "cpu.used.summation", "cpu.wait.summation",
    "mem.active.average", "mem.granted.average", "mem.latency.average",
    "mem.swapin.average", "mem.swapinRate.average", "mem.swapout.average",
    "mem.swapoutRate.average", "mem.usage.average", "mem.vmmemctl.average",
    "net.bytesRx.average", "net.bytesTx.average", "net.droppedRx.summation",
    "net.droppedTx.summation", "net.usage.average", "power.power.average",
    "virtualDisk.numberReadAveraged.average", "virtualDisk.numberWriteAveraged.average",
    "virtualDisk.read.average", "virtualDisk.readOIO.latest",
    "virtualDisk.throughput.usage.average", "virtualDisk.totalReadLatency.average",
    "virtualDisk.totalWriteLatency.average", "virtualDisk.write.average",
    "virtualDisk.writeOIO.latest", "sys.uptime.latest"
  ]
  vm_instances = true

  host_include = [ "/*/host/**" ]
  host_metric_include = [
    "cpu.coreUtilization.average", "cpu.costop.summation", "cpu.demand.average",
    "cpu.idle.summation", "cpu.latency.average", "cpu.readiness.average",
    "cpu.ready.summation", "cpu.swapwait.summation", "cpu.usage.average",
    "cpu.usagemhz.average", "cpu.used.summation", "cpu.utilization.average",
    "cpu.wait.summation", "disk.deviceReadLatency.average", "disk.deviceWriteLatency.average",
    "disk.kernelReadLatency.average", "disk.kernelWriteLatency.average",
    "disk.numberReadAveraged.average", "disk.numberWriteAveraged.average",
    "disk.read.average", "disk.totalReadLatency.average", "disk.totalWriteLatency.average",
    "disk.write.average", "mem.active.average", "mem.latency.average",
    "mem.state.latest", "mem.swapin.average", "mem.swapinRate.average",
    "mem.swapout.average", "mem.swapoutRate.average", "mem.totalCapacity.average",
    "mem.usage.average", "mem.vmmemctl.average", "net.bytesRx.average",
    "net.bytesTx.average", "net.droppedRx.summation", "net.droppedTx.summation",
    "net.errorsRx.summation", "net.errorsTx.summation", "net.usage.average",
    "power.power.average", "storageAdapter.numberReadAveraged.average",
    "storageAdapter.numberWriteAveraged.average", "storageAdapter.read.average",
    "storageAdapter.write.average", "sys.uptime.latest"
  ]
  host_instances = true

  cluster_include = [ "/*/host/**" ]
  resource_pool_include = [ "/*/host/**" ]
  datastore_include = [ "/*/datastore/**" ]
  datacenter_include = [ "/*/host/**" ]

  collect_concurrency = 4
  discover_concurrency = 4


[[processors.tagpass]]
  namepass = ["source"]
  [[processors.tagpass.tags]]
    source = ["vmware"]

[[processors.tagpass]]
  namepass = ["source"]
  [[processors.tagpass.tags]]
    source = ["idrac"]

# Regex Processor for log dates
[[processors.regex]]
  [[processors.regex.fields]]
    key = "log-dates"
    pattern = "^(?P<YYYY>\\d{4})(?P<MM>\\d{2})(?P<DD>\\d{2})(?P<HH>\\d{2})(?P<mm>\\d{2})(?P<ss>\\d{2})\\.(?P<micro>\\d{6})(?P<offset>[-+]\\d{3,4})$"
    replacement = "${YYYY}-${MM}-${DD} ${HH}:${mm}:${ss}"

# SNMP Input Plugin for IDRAC devices
[[inputs.snmp]]
  agents = ["10.192.63.31:161", "10.192.63.32:161", "10.192.63.33:161", "10.192.63.34:161", "10.192.63.35:161", "10.192.63.36:161"]
  version = 1
  community = "public"
  name = "idrac-host"

  [inputs.snmp.tags]
    source = "idrac"

  [[inputs.snmp.field]]
    name = "system-name"
    oid  = ".1.3.6.1.2.1.1.5.0"
    is_tag = true
  [[inputs.snmp.field]]
    name = "system-osname"
    oid  = ".1.3.6.1.4.1.674.10892.5.1.3.6.0"
  [[inputs.snmp.field]]
    name = "system-osversion"
    oid  = ".1.3.6.1.4.1.674.10892.5.1.3.14.0"
  [[inputs.snmp.field]]
    name = "system-model"
    oid  = ".1.3.6.1.4.1.674.10892.5.1.3.20.0"
